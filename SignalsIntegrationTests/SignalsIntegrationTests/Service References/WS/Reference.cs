//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SignalsIntegrationTests.WS {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WS.ISignals")]
    public interface ISignals {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISignals/Get", ReplyAction="http://tempuri.org/ISignals/GetResponse")]
        Signals.Dto.Signal Get(Signals.Dto.Path path);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISignals/Get", ReplyAction="http://tempuri.org/ISignals/GetResponse")]
        System.Threading.Tasks.Task<Signals.Dto.Signal> GetAsync(Signals.Dto.Path path);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISignals/Add", ReplyAction="http://tempuri.org/ISignals/AddResponse")]
        Signals.Dto.Signal Add(Signals.Dto.Signal signal);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISignals/Add", ReplyAction="http://tempuri.org/ISignals/AddResponse")]
        System.Threading.Tasks.Task<Signals.Dto.Signal> AddAsync(Signals.Dto.Signal signal);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISignals/GetData", ReplyAction="http://tempuri.org/ISignals/GetDataResponse")]
        Signals.Dto.Datum[] GetData(Signals.Dto.Signal signal, System.DateTime fromIncluded, System.DateTime toExcluded);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISignals/GetData", ReplyAction="http://tempuri.org/ISignals/GetDataResponse")]
        System.Threading.Tasks.Task<Signals.Dto.Datum[]> GetDataAsync(Signals.Dto.Signal signal, System.DateTime fromIncluded, System.DateTime toExcluded);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISignals/SetData", ReplyAction="http://tempuri.org/ISignals/SetDataResponse")]
        void SetData(Signals.Dto.Signal signal, System.DateTime fromIncluded, Signals.Dto.Datum[] data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISignals/SetData", ReplyAction="http://tempuri.org/ISignals/SetDataResponse")]
        System.Threading.Tasks.Task SetDataAsync(Signals.Dto.Signal signal, System.DateTime fromIncluded, Signals.Dto.Datum[] data);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISignalsChannel : SignalsIntegrationTests.WS.ISignals, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SignalsClient : System.ServiceModel.ClientBase<SignalsIntegrationTests.WS.ISignals>, SignalsIntegrationTests.WS.ISignals {
        
        public SignalsClient() {
        }
        
        public SignalsClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SignalsClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SignalsClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SignalsClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Signals.Dto.Signal Get(Signals.Dto.Path path) {
            return base.Channel.Get(path);
        }
        
        public System.Threading.Tasks.Task<Signals.Dto.Signal> GetAsync(Signals.Dto.Path path) {
            return base.Channel.GetAsync(path);
        }
        
        public Signals.Dto.Signal Add(Signals.Dto.Signal signal) {
            return base.Channel.Add(signal);
        }
        
        public System.Threading.Tasks.Task<Signals.Dto.Signal> AddAsync(Signals.Dto.Signal signal) {
            return base.Channel.AddAsync(signal);
        }
        
        public Signals.Dto.Datum[] GetData(Signals.Dto.Signal signal, System.DateTime fromIncluded, System.DateTime toExcluded) {
            return base.Channel.GetData(signal, fromIncluded, toExcluded);
        }
        
        public System.Threading.Tasks.Task<Signals.Dto.Datum[]> GetDataAsync(Signals.Dto.Signal signal, System.DateTime fromIncluded, System.DateTime toExcluded) {
            return base.Channel.GetDataAsync(signal, fromIncluded, toExcluded);
        }
        
        public void SetData(Signals.Dto.Signal signal, System.DateTime fromIncluded, Signals.Dto.Datum[] data) {
            base.Channel.SetData(signal, fromIncluded, data);
        }
        
        public System.Threading.Tasks.Task SetDataAsync(Signals.Dto.Signal signal, System.DateTime fromIncluded, Signals.Dto.Datum[] data) {
            return base.Channel.SetDataAsync(signal, fromIncluded, data);
        }
    }
}
