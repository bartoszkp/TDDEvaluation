//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SignalsIntegrationTests.Signals {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Path", Namespace="http://schemas.datacontract.org/2004/07/Signals.Domain")]
    [System.SerializableAttribute()]
    public partial class Path : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] ComponentsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] Components {
            get {
                return this.ComponentsField;
            }
            set {
                if ((object.ReferenceEquals(this.ComponentsField, value) != true)) {
                    this.ComponentsField = value;
                    this.RaisePropertyChanged("Components");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Signal", Namespace="http://schemas.datacontract.org/2004/07/Signals.Domain")]
    [System.SerializableAttribute()]
    public partial class Signal : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DataTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SignalsIntegrationTests.Signals.Granularity GranularityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SignalsIntegrationTests.Signals.Path PathField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DataType {
            get {
                return this.DataTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.DataTypeField, value) != true)) {
                    this.DataTypeField = value;
                    this.RaisePropertyChanged("DataType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SignalsIntegrationTests.Signals.Granularity Granularity {
            get {
                return this.GranularityField;
            }
            set {
                if ((this.GranularityField.Equals(value) != true)) {
                    this.GranularityField = value;
                    this.RaisePropertyChanged("Granularity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SignalsIntegrationTests.Signals.Path Path {
            get {
                return this.PathField;
            }
            set {
                if ((object.ReferenceEquals(this.PathField, value) != true)) {
                    this.PathField = value;
                    this.RaisePropertyChanged("Path");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Granularity", Namespace="http://schemas.datacontract.org/2004/07/Signals.Domain")]
    public enum Granularity : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Second = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Minute = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Hour = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Day = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Week = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Month = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Year = 6,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DatumOfanyType", Namespace="http://schemas.datacontract.org/2004/07/Signals.Domain")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SignalsIntegrationTests.Signals.Path))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SignalsIntegrationTests.Signals.Signal))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SignalsIntegrationTests.Signals.Granularity))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SignalsIntegrationTests.Signals.DatumOfanyType[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(string[]))]
    public partial class DatumOfanyType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TimestampField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private object ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Timestamp {
            get {
                return this.TimestampField;
            }
            set {
                if ((this.TimestampField.Equals(value) != true)) {
                    this.TimestampField = value;
                    this.RaisePropertyChanged("Timestamp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public object Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Signals.ISignals")]
    public interface ISignals {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISignals/Get", ReplyAction="http://tempuri.org/ISignals/GetResponse")]
        SignalsIntegrationTests.Signals.Signal Get(SignalsIntegrationTests.Signals.Path path);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISignals/Get", ReplyAction="http://tempuri.org/ISignals/GetResponse")]
        System.Threading.Tasks.Task<SignalsIntegrationTests.Signals.Signal> GetAsync(SignalsIntegrationTests.Signals.Path path);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISignals/Add", ReplyAction="http://tempuri.org/ISignals/AddResponse")]
        SignalsIntegrationTests.Signals.Signal Add(SignalsIntegrationTests.Signals.Path path, string dataType, SignalsIntegrationTests.Signals.Granularity granularity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISignals/Add", ReplyAction="http://tempuri.org/ISignals/AddResponse")]
        System.Threading.Tasks.Task<SignalsIntegrationTests.Signals.Signal> AddAsync(SignalsIntegrationTests.Signals.Path path, string dataType, SignalsIntegrationTests.Signals.Granularity granularity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISignals/GetData", ReplyAction="http://tempuri.org/ISignals/GetDataResponse")]
        SignalsIntegrationTests.Signals.DatumOfanyType[] GetData(SignalsIntegrationTests.Signals.Signal signal, System.DateTime fromIncluded, System.DateTime toExcluded);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISignals/GetData", ReplyAction="http://tempuri.org/ISignals/GetDataResponse")]
        System.Threading.Tasks.Task<SignalsIntegrationTests.Signals.DatumOfanyType[]> GetDataAsync(SignalsIntegrationTests.Signals.Signal signal, System.DateTime fromIncluded, System.DateTime toExcluded);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISignals/SetData", ReplyAction="http://tempuri.org/ISignals/SetDataResponse")]
        void SetData(SignalsIntegrationTests.Signals.Signal signal, System.DateTime fromIncluded, SignalsIntegrationTests.Signals.DatumOfanyType[] data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISignals/SetData", ReplyAction="http://tempuri.org/ISignals/SetDataResponse")]
        System.Threading.Tasks.Task SetDataAsync(SignalsIntegrationTests.Signals.Signal signal, System.DateTime fromIncluded, SignalsIntegrationTests.Signals.DatumOfanyType[] data);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISignalsChannel : SignalsIntegrationTests.Signals.ISignals, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SignalsClient : System.ServiceModel.ClientBase<SignalsIntegrationTests.Signals.ISignals>, SignalsIntegrationTests.Signals.ISignals {
        
        public SignalsClient() {
        }
        
        public SignalsClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SignalsClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SignalsClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SignalsClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public SignalsIntegrationTests.Signals.Signal Get(SignalsIntegrationTests.Signals.Path path) {
            return base.Channel.Get(path);
        }
        
        public System.Threading.Tasks.Task<SignalsIntegrationTests.Signals.Signal> GetAsync(SignalsIntegrationTests.Signals.Path path) {
            return base.Channel.GetAsync(path);
        }
        
        public SignalsIntegrationTests.Signals.Signal Add(SignalsIntegrationTests.Signals.Path path, string dataType, SignalsIntegrationTests.Signals.Granularity granularity) {
            return base.Channel.Add(path, dataType, granularity);
        }
        
        public System.Threading.Tasks.Task<SignalsIntegrationTests.Signals.Signal> AddAsync(SignalsIntegrationTests.Signals.Path path, string dataType, SignalsIntegrationTests.Signals.Granularity granularity) {
            return base.Channel.AddAsync(path, dataType, granularity);
        }
        
        public SignalsIntegrationTests.Signals.DatumOfanyType[] GetData(SignalsIntegrationTests.Signals.Signal signal, System.DateTime fromIncluded, System.DateTime toExcluded) {
            return base.Channel.GetData(signal, fromIncluded, toExcluded);
        }
        
        public System.Threading.Tasks.Task<SignalsIntegrationTests.Signals.DatumOfanyType[]> GetDataAsync(SignalsIntegrationTests.Signals.Signal signal, System.DateTime fromIncluded, System.DateTime toExcluded) {
            return base.Channel.GetDataAsync(signal, fromIncluded, toExcluded);
        }
        
        public void SetData(SignalsIntegrationTests.Signals.Signal signal, System.DateTime fromIncluded, SignalsIntegrationTests.Signals.DatumOfanyType[] data) {
            base.Channel.SetData(signal, fromIncluded, data);
        }
        
        public System.Threading.Tasks.Task SetDataAsync(SignalsIntegrationTests.Signals.Signal signal, System.DateTime fromIncluded, SignalsIntegrationTests.Signals.DatumOfanyType[] data) {
            return base.Channel.SetDataAsync(signal, fromIncluded, data);
        }
    }
}
